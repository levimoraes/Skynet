                                                          #pragma config(UART_Usage, UART2, VEX_2x16_LCD)
#pragma config(Sensor, dgtl6,  speaker,             sensorDigitalOut)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*
  Project Title: Speaker Test
  Team Members:
  Date:
  Section:


  Task Description:


  Pseudocode:

*/


int makeTone(int hzFrequency, int msDuration)
{
  int msStartTime = nPgmTime;
  int msTime = nPgmTime;
  int WaitTime = 20000 / hzFrequency;
  int i;
  while ((msTime - msStartTime) < msDuration)
  {
    msTime = nPgmTime;
	  SensorValue[speaker] = 1;
	  for (i = 0; i < WaitTime; i++);
	  //wait1Msec(msWaitTime);
	  SensorValue[speaker] = 0;
	  for (i = 0; i < WaitTime; i++);
    //wait1Msec(msWaitTime);
  }
  return 0;
}

int waitUser(float duration)
{
  //int btns = 1;
  //while (btns != 0) btns = nLCDButtons; //Uncomment for "manual" control with VEX Screen;-)
  //while (btns == 0) btns = nLCDButtons;
  wait1Msec(duration*1.1); //To Correct for the slight offness of the timing
  return 1;
}

// code generated by Bricx Command Center
int mario() {
  waitUser(1);
  makeTone(330,71);
  waitUser(75);
  makeTone(330,71);
  waitUser(150);
  makeTone(330,71);
  waitUser(150);
  makeTone(262,71);
  waitUser(75);
  makeTone(330,146);
  waitUser(149);
  makeTone(392,147);
  waitUser(300);
  makeTone(196,147);
  waitUser(300);
  makeTone(262,147);
  waitUser(225);
  makeTone(196,72);
  waitUser(225);
  makeTone(165,147);
  waitUser(225);
  makeTone(220,72);
  waitUser(150);
  makeTone(247,73);
  waitUser(150);
  makeTone(233,73);
  waitUser(75);
  makeTone(220,147);
  waitUser(150);
  makeTone(196,97);
  waitUser(100);
  makeTone(330,97);
  waitUser(100);
  makeTone(392,97);
  waitUser(100);
  makeTone(440,147);
  waitUser(150);
  makeTone(349,72);
  waitUser(75);
  makeTone(392,72);
  waitUser(150);
  makeTone(330,72);
  waitUser(150);
  makeTone(262,72);
  waitUser(75);
  makeTone(294,72);
  waitUser(75);
  makeTone(247,72);
  waitUser(225);
  makeTone(262,147);
  waitUser(225);
  makeTone(196,72);
  waitUser(225);
  makeTone(165,147);
  waitUser(225);
  makeTone(220,72);
  waitUser(150);
  makeTone(247,72);
  waitUser(150);
  makeTone(233,72);
  waitUser(75);
  makeTone(220,147);
  waitUser(150);
  makeTone(196,97);
  waitUser(100);
  makeTone(330,97);
  waitUser(100);
  makeTone(392,97);
  waitUser(100);
  makeTone(440,147);
  waitUser(150);
  makeTone(349,72);
  waitUser(75);
  makeTone(392,72);
  waitUser(150);
  makeTone(330,72);
  waitUser(150);
  makeTone(262,72);
  waitUser(75);
  makeTone(294,72);
  waitUser(75);
  makeTone(247,72);
  waitUser(375);
  makeTone(392,72);
  waitUser(75);
  makeTone(370,72);
  waitUser(75);
  makeTone(349,72);
  waitUser(75);
  makeTone(311,72);
  waitUser(150);
  makeTone(330,72);
  waitUser(150);
  makeTone(208,72);
  waitUser(75);
  makeTone(220,72);
  waitUser(75);
  makeTone(262,72);
  waitUser(150);
  makeTone(220,72);
  waitUser(75);
  makeTone(262,72);
  waitUser(75);
  makeTone(294,72);
  waitUser(225);
  makeTone(392,73);
  waitUser(75);
  makeTone(370,73);
  waitUser(75);
  makeTone(349,72);
  waitUser(75);
  makeTone(311,72);
  waitUser(150);
  makeTone(330,73);
  waitUser(150);
  makeTone(523,72);
  waitUser(150);
  makeTone(523,72);
  waitUser(75);
  makeTone(523,147);
  waitUser(450);
  makeTone(392,72);
  waitUser(75);
  makeTone(370,72);
  waitUser(75);
  makeTone(349,72);
  waitUser(75);
  makeTone(311,72);
  waitUser(150);
  makeTone(330,72);
  waitUser(150);
  makeTone(208,72);
  waitUser(75);
  makeTone(220,72);
  waitUser(75);
  makeTone(262,72);
  waitUser(150);
  makeTone(220,72);
  waitUser(75);
  makeTone(262,72);
  waitUser(75);
  makeTone(294,72);
  waitUser(225);
  makeTone(311,147);
  waitUser(225);
  makeTone(294,72);
  waitUser(225);
  makeTone(262,147);
  waitUser(600);
  makeTone(262,72);
  waitUser(75);
  makeTone(262,72);
  waitUser(150);
  makeTone(262,72);
  waitUser(150);
  makeTone(262,72);
  waitUser(75);
  makeTone(294,148);
  waitUser(150);
  makeTone(330,72);
  waitUser(75);
  makeTone(262,72);
  waitUser(150);
  makeTone(220,72);
  waitUser(75);
  makeTone(196,147);
  waitUser(300);
  makeTone(262,72);
  waitUser(75);
  makeTone(262,72);
  waitUser(150);
  makeTone(262,72);
  waitUser(150);
  makeTone(262,72);
  waitUser(75);
  makeTone(294,72);
  waitUser(75);
  makeTone(330,72);
  waitUser(675);
  makeTone(262,72);
  waitUser(75);
  makeTone(262,72);
  waitUser(150);
  makeTone(262,72);
  waitUser(150);
  makeTone(262,72);
  waitUser(75);
  makeTone(294,148);
  waitUser(150);
  makeTone(330,72);
  waitUser(75);
  makeTone(262,72);
  waitUser(150);
  makeTone(220,72);
  waitUser(75);
  makeTone(196,147);
  waitUser(300);
  makeTone(330,73);
  waitUser(75);
  makeTone(330,73);
  waitUser(150);
  makeTone(330,73);
  waitUser(150);
  makeTone(262,73);
  waitUser(75);
  makeTone(330,147);
  waitUser(150);
  makeTone(392,147);
  waitUser(300);
  makeTone(196,147);
  waitUser(300);
  makeTone(262,147);
  waitUser(225);
  makeTone(196,72);
  waitUser(225);
  makeTone(165,147);
  waitUser(225);
  makeTone(220,72);
  waitUser(150);
  makeTone(247,73);
  waitUser(150);
  makeTone(233,73);
  waitUser(75);
  makeTone(220,147);
  waitUser(150);
  makeTone(196,97);
  waitUser(100);
  makeTone(330,97);
  waitUser(100);
  makeTone(392,97);
  waitUser(100);
  makeTone(440,147);
  waitUser(150);
  makeTone(349,72);
  waitUser(75);
  makeTone(392,72);
  waitUser(150);
  makeTone(330,72);
  waitUser(150);
  makeTone(262,72);
  waitUser(75);
  makeTone(294,72);
  waitUser(75);
  makeTone(247,72);
  waitUser(225);
  makeTone(262,147);
  waitUser(225);
  makeTone(196,72);
  waitUser(225);
  makeTone(165,147);
  waitUser(225);
  makeTone(220,72);
  waitUser(150);
  makeTone(247,72);
  waitUser(150);
  makeTone(233,72);
  waitUser(75);
  makeTone(220,147);
  waitUser(150);
  makeTone(196,97);
  waitUser(100);
  makeTone(330,97);
  waitUser(100);
  makeTone(392,97);
  waitUser(100);
  makeTone(440,147);
  waitUser(150);
  makeTone(349,72);
  waitUser(75);
  makeTone(392,72);
  waitUser(150);
  makeTone(330,72);
  waitUser(150);
  makeTone(262,72);
  waitUser(75);
  makeTone(294,72);
  waitUser(75);
  makeTone(247,72);
  waitUser(225);
  makeTone(330,72);
  waitUser(75);
  makeTone(262,72);
  waitUser(150);
  makeTone(196,72);
  waitUser(225);
  makeTone(208,147);
  waitUser(150);
  makeTone(220,72);
  waitUser(75);
  makeTone(349,72);
  waitUser(150);
  makeTone(349,72);
  waitUser(75);
  makeTone(220,147);
  waitUser(300);
  makeTone(247,97);
  waitUser(100);
  makeTone(440,97);
  waitUser(100);
  makeTone(440,97);
  waitUser(100);
  makeTone(440,97);
  waitUser(100);
  makeTone(392,97);
  waitUser(100);
  makeTone(349,97);
  waitUser(100);
  makeTone(330,72);
  waitUser(75);
  makeTone(262,72);
  waitUser(150);
  makeTone(220,72);
  waitUser(75);
  makeTone(196,147);
  waitUser(300);
  makeTone(330,72);
  waitUser(75);
  makeTone(262,72);
  waitUser(150);
  makeTone(196,72);
  waitUser(225);
  makeTone(208,147);
  waitUser(150);
  makeTone(220,72);
  waitUser(75);
  makeTone(349,73);
  waitUser(150);
  makeTone(349,73);
  waitUser(75);
  makeTone(220,147);
  waitUser(300);
  makeTone(247,72);
  waitUser(75);
  makeTone(349,72);
  waitUser(150);
  makeTone(349,72);
  waitUser(75);
  makeTone(349,97);
  waitUser(100);
  makeTone(330,97);
  waitUser(100);
  makeTone(294,97);
  waitUser(100);
  makeTone(262,72);
  waitUser(75);
  makeTone(196,72);
  waitUser(150);
  makeTone(165,73);
  waitUser(75);
  makeTone(131,148);
  waitUser(300);
  makeTone(330,72);
  waitUser(75);
  makeTone(262,72);
  waitUser(150);
  makeTone(196,72);
  waitUser(225);
  makeTone(208,147);
  waitUser(150);
  makeTone(220,72);
  waitUser(75);
  makeTone(349,72);
  waitUser(150);
  makeTone(349,72);
  waitUser(75);
  makeTone(220,147);
  waitUser(300);
  makeTone(247,97);
  waitUser(100);
  makeTone(440,97);
  waitUser(100);
  makeTone(440,97);
  waitUser(100);
  makeTone(440,97);
  waitUser(100);
  makeTone(392,97);
  waitUser(100);
  makeTone(349,97);
  waitUser(100);
  makeTone(330,72);
  waitUser(75);
  makeTone(262,72);
  waitUser(150);
  makeTone(220,72);
  waitUser(75);
  makeTone(196,147);
  waitUser(300);
  makeTone(330,72);
  waitUser(75);
  makeTone(262,72);
  waitUser(150);
  makeTone(196,72);
  waitUser(225);
  makeTone(208,147);
  waitUser(150);
  makeTone(220,72);
  waitUser(84);
  makeTone(349,73);
  waitUser(141);
  makeTone(349,73);
  waitUser(75);
  makeTone(220,147);
  waitUser(300);
  makeTone(247,72);
  waitUser(75);
  makeTone(349,72);
  waitUser(150);
  makeTone(349,72);
  waitUser(75);
  makeTone(349,97);
  waitUser(100);
  makeTone(330,97);
  waitUser(100);
  makeTone(294,97);
  waitUser(100);
  makeTone(262,72);
  waitUser(75);
  makeTone(196,72);
  waitUser(150);
  makeTone(165,73);
  waitUser(94);
  makeTone(131,148);
  waitUser(150);
  return 1;
}


task main()
{                                     //Program begins, insert code within curly braces
int x = 0;
//while (x == 0) x = vexRT[Btn5D];
mario();
//int i;
//int leftchannel;
//int rightchannel;
/*makeTone(100, 500);
makeTone(200, 500);
makeTone(300, 500);
makeTone(400, 500);*/


while (true)
{
  /*SensorValue[speaker] = 1;
  for (i = 0; i < leftchannel*10; i++);
  //wait1Msec(3);
  SensorValue[speaker] = 0;
  for (i = 0; i < leftchannel*10; i++);
  //wait1Msec(3);
  leftchannel = vexRT[Ch3];
  rightchannel = vexRT[Ch2];*/
}

}
